import enum
from typing import Annotated, Optional, Any

from pydantic import BaseModel, Field


class AgentRole(str, enum.Enum):
    """Agent role."""
    EXECUTOR = "EXECUTOR"
    """The agent that is executing the original request."""
    SUPERVISOR = "SUPERVISOR"
    """The agent that oversees the executor."""
    JUDGE = "JUDGE"
    """The agent that judges the executor's response."""


class Message(BaseModel):
    """Message generated by the LLM agent."""
    role: AgentRole
    content: Annotated[str, Field(min_length=1)]
    structured_data: Optional[dict[str, Any]] = None
    """Parsed structured data from the message content (e.g., JSON responses)"""
    decision: Optional[bool] = None
    """Boolean decision for jury members (is_task_good_enough) or supervisor (is_executor_response_valid)"""
