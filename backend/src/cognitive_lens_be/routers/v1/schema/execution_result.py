import enum
from typing import Annotated

from pydantic import BaseModel, Field


class AgentRole(str, enum.Enum):
    """Agent role."""
    EXECUTOR = "EXECUTOR"
    """The agent that is executing the original request."""
    SUPERVISOR = "SUPERVISOR"
    """The agent that oversees the executor."""


class Message(BaseModel):
    """Message generated by the LLM agent."""
    role: AgentRole
    content: Annotated[str, Field(min_length=1)]


class ExecutionResult(BaseModel):
    """Execution result of the single node."""
    success: bool = True
    output_message: Message | None
    """The final result of the node execution."""
    thinking_process: list[Message]
    """The thinking process, including the supervisor's thoughts."""

    @classmethod
    def create_failure(cls) -> "ExecutionResult":
        return cls(success=False, output_message=None, thinking_process=[])
